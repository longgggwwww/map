generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@user/prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("USER_DATABASE_URL")
}

model User {
  id              Int          @id @default(autoincrement())
  username        String       @unique
  password        String
  profile         Profile?
  type            Int          @default(0)
  isActive        Boolean      @default(false)
  role            Role         @relation(fields: [roleId], references: [id])
  roles           Role[]       @relation("createdBy")
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  roleId          Int
  permissionGroup Group[]
  Permission      Permission[]
}

model Profile {
  id         Int       @id @default(autoincrement())
  user       User      @relation(fields: [userId], references: [id])
  userId     Int       @unique
  email      String?   @unique
  phone      String?   @unique
  fullName   String?
  birthday   DateTime?
  gender     Boolean?
  address    String?
  avatar     String?
  positionId Int?
  wardId     Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String
  code        String       @unique
  permissions Permission[]
  users       User[]
  createdBy   User?        @relation(name: "createdBy", fields: [createdById], references: [id])
  createdById Int?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Group {
  id          Int          @id @default(autoincrement())
  name        String
  permissions Permission[]
  createdBy   User?        @relation(fields: [createdById], references: [id])
  createdById Int?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Permission {
  id          Int      @id @default(autoincrement())
  name        String
  code        String   @unique
  group       Group    @relation(fields: [groupId], references: [id])
  groupId     Int
  roles       Role[]
  createdBy   User?    @relation(fields: [createdById], references: [id])
  createdById Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
